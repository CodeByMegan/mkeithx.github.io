"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6626],{1986:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var i=s(4848),t=s(8453);const r={title:"Git",description:"Version Control - Git",sidebar_position:1},a=void 0,c={id:"guides/git",title:"Git",description:"Version Control - Git",source:"@site/docs/guides/git.mdx",sourceDirName:"guides",slug:"/guides/git",permalink:"/docs/guides/git",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1716513188e3,sidebarPosition:1,frontMatter:{title:"Git",description:"Version Control - Git",sidebar_position:1},sidebar:"mySidebar",previous:{title:"Guides",permalink:"/docs/guides"},next:{title:"Batch",permalink:"/docs/guides/batch-sample"}},l={},o=[{value:"Basic workflow",id:"basic-workflow",level:2},{value:"Using <code>git switch</code>",id:"using-git-switch",level:2},{value:"Configuration",id:"configuration",level:2},{value:"<code>.gitconfig</code>",id:"gitconfig",level:3}];function h(n){const e={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components},{Details:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"basic-workflow",children:"Basic workflow"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Create a local branch"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git checkout -b my-feature\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Make changes"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'git commit -m "feat: my feature description"\n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Push changes"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git push\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git push -u origin my-feature\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"using-git-switch",children:["Using ",(0,i.jsx)(e.code,{children:"git switch"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Switch to an Existing Branch"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git switch branch-name\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"2",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Create and Switch to a New Branch"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git switch -c new-branch-name\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Work on Your Branch"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git add .\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'git commit -m "Describe your changes"\n'})}),"\n",(0,i.jsxs)(e.ol,{start:"4",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Push Your Branch to Remote"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git push -u origin new-branch-name\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"5",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Merge Changes from Another Branch"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git switch your-branch\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git merge main\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"6",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Resolve Conflicts (if any)"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git add .\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'git commit -m "Resolved merge conflicts"\n'})}),"\n",(0,i.jsxs)(e.ol,{start:"7",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Switch Back to Another Branch"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git switch main\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"8",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Clean Up"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git branch -d new-feature\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"git push origin --delete new-feature\n"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"git switch"})," enhances branch management in Git, making it easier to switch between, create, and merge branches."]}),"\n",(0,i.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(e.h3,{id:"gitconfig",children:(0,i.jsx)(e.code,{children:".gitconfig"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Configuring .gitconfig"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",metastring:'title=".gitconfig"',children:'\n# First things first, always set up your user info.\n// highlight-start\n\n[user]\nname = my_username\nemail = my_email@example.com\n\n// highlight-end\n\n# Display colours in the console\n[color]\nui = auto\nbranch = auto\nstatus = auto\n\n# Always rebase when using `git pull`, except for `main, master, develop` branches.\n[branch]\nautosetuprebase = always\n\n[branch "main"]\nrebase = false\n\n[branch "master"]\nrebase = false\n\n[branch "develop"]\nrebase = false\n\n\n\n# Automatically set up remote tracking branches for all new local branches.\n\n\n\n[push]\nautoSetupRemote = true\n\n# Important setting in windows that allows working on both Windows and cross-platform projects\n[core]\neol = native\nautocrlf = input\n\n# Common typos and aliases for long commands\n[alias]\nchekcout = checkout\nocmmit = commit\nstatsu = status\nsttaus = status\nfa = fetch --all\npushf = push --force-with-lease\nstsah = stash\n\n# Common LFS Settings\n[filter "lfs"]\nsmudge = git-lfs smudge -- %f\nprocess = git-lfs filter-process\nrequired = true\nclean = git-lfs clean -- %f\n\n# How private registries are handled\n[credential "https://my_company_vcs.example.com"]\nprovider = generic\n'})})]})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>a,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function a(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);